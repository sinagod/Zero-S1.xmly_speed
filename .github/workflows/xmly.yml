# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: 喜马拉雅极速版

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '10 0 * * *'
  # watch:
  #       types: started
  repository_dispatch:
    types: xmly_speed
jobs:
  build:

    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Checkout
        run: |
          git clone -b master https://github.com/lxk0301/jd_scripts.git ~/scripts
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
      - name: '运行 【健康抽奖机】'
        run: |
          cd  ~/scripts
          npm install
          node jd_health.js
          node jd_jdh.js
        env:



name: 喜马拉雅极速版

on:
  schedule:
    - cron: '*/30 * * * * '
  watch:
    types: [started]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: 'Set up Python'
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
         
      - name: 'Install requirements'
        run: pip install -r ./requirements.txt 
        
      - name: 'run 喜马拉雅极速版' 
        run: python3 xmly_speed.py 
        env:
            XMLY_SPEED_COOKIE: ${{ secrets.XMLY_SPEED_COOKIE }}  #必须
            # XMLY_ACCUMULATE_TIME: ${{ secrets.XMLY_ACCUMULATE_TIME }} #非私密信息，去掉
            BARK: ${{ secrets.BARK }}     # bark服务
            SCKEY: ${{ secrets.SCKEY }}   # server酱服务
            TG_BOT_TOKEN: ${{secrets.TG_BOT_TOKEN}} # tg通知token
            TG_USER_ID:  ${{secrets.TG_USER_ID}}    # tg通知id
